<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>Artium's Blog</title>
    <link>http://t2.technion.ac.il/~sartium</link>
    <description>Artium Nihamkin's Blog</description>
    <pubDate>Sat, 13 Oct 2012 13:30:31 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Highlighting Special Posts in Blogofile</title>
      <link>http://t2.technion.ac.il/~sartium/2012/09/25/highlighting-special-posts-in-blogofile</link>
      <pubDate>Tue, 25 Sep 2012 17:00:00 IST</pubDate>
      <category><![CDATA[Blogofile]]></category>
      <category><![CDATA[Special]]></category>
      <guid isPermaLink="true">http://t2.technion.ac.il/~sartium/2012/09/25/highlighting-special-posts-in-blogofile</guid>
      <description>Highlighting Special Posts in Blogofile</description>
      <content:encoded><![CDATA[<p>This simple but use-full blogofile hack will allow you to alter the style of posts which are marked as special. 
For example the post you are reading belongs to the "Special" category and therefore has a golden background instead of the gray default one.</p>
<p>This is quite straightforward hack, all you have to do is to modify the "_templates/site.mako" template (assuming version 0.7.1). </p>
<p>Replace the line:</p>
<div class="pygments_monokai"><pre><span class="x">&lt;div class=&quot;blog_post&quot;&gt;</span>
</pre></div>

<p>with the following snippet:</p>
<div class="pygments_monokai"><pre><span class="cp">%</span> <span class="k">if</span> <span class="s">&quot;Special&quot;</span> <span class="ow">in</span> <span class="p">[</span><span class="n">x</span><span class="o">.</span><span class="n">name</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">post</span><span class="o">.</span><span class="n">categories</span><span class="p">]:</span><span class="x"></span>
<span class="x">&lt;div class=&quot;blog_post&quot; style=&quot;background-color: gold;&quot;&gt;</span>
<span class="cp">%</span> <span class="k">else</span><span class="p">:</span><span class="x"></span>
<span class="x">&lt;div class=&quot;blog_post&quot;&gt;</span>
<span class="cp">%</span><span class="k"> endif</span><span class="x"></span>
</pre></div>

<p>As can be seen, we check for the existence of the category name "Style" in a list that contains the names of all the categories of the current post. 
If this name exists we output the div element with custom style.</p>
<p>This is enough for simple usage, but the idea can be extended for multiple category names and styles, allowing us to style each category differently.</p>
<p>Add the following code at the top of "_templates/site.mako":</p>
<div class="pygments_monokai"><pre><span class="cp">&lt;%</span>
<span class="n">category_styles</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;Special&quot;</span> <span class="p">:</span> <span class="s">&quot;background-color: gold;&quot;</span><span class="p">,</span>
                   <span class="s">&quot;Another Example&quot;</span> <span class="p">:</span> <span class="s">&quot;border: 3px dashed black;&quot;</span> <span class="p">}</span>
<span class="n">category_names</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span><span class="o">.</span><span class="n">name</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">post</span><span class="o">.</span><span class="n">categories</span><span class="p">]</span>
<span class="n">style</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">v</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">category_styles</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">category_names</span><span class="p">])</span>
<span class="cp">%&gt;</span><span class="x"></span>
</pre></div>

<p>As you can see, it is possible to add more category-style pairs into the "category_styles" dictionary. Ideally we would like to put this into the _config.py file , but currently I do not know how to do it.</p>
<p>And finally, we need to update the div element to look like this:</p>
<div class="pygments_monokai"><pre><span class="x">&lt;div class=&quot;blog_post&quot; style=&quot;</span><span class="cp">${</span><span class="n">style</span><span class="cp">}</span><span class="x">&quot;&gt;</span>
</pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Why I Chose Blogofile as my Blogging Platform</title>
      <link>http://t2.technion.ac.il/~sartium/2012/09/02/why-i-chose-blogofile-as-my-blogging-platform</link>
      <pubDate>Sun, 02 Sep 2012 01:00:00 IDT</pubDate>
      <category><![CDATA[About]]></category>
      <category><![CDATA[Blogofile]]></category>
      <category><![CDATA[Web Development]]></category>
      <guid isPermaLink="true">http://t2.technion.ac.il/~sartium/2012/09/02/why-i-chose-blogofile-as-my-blogging-platform</guid>
      <description>Why I Chose Blogofile as my Blogging Platform</description>
      <content:encoded><![CDATA[<p>Blogofile is the blogging engine behind this blog.</p>
<p>First of all, what is "Blogofile"? The definition from the original <a href="http://www.blogofile.com/">website</a> says:</p>
<blockquote>
<p><strong>Definition: Blogofile (n):</strong> A static website compiler and blog engine, written and extended in Python.</p>
</blockquote>
<p>Blogofile creates a static, full featured blog out of posts that are stored in text files. This static website then can be copied to any web server capable of serving static content. No need for PHP, python, .NET or CGI installed.
This is contrary to blogs that use dynamic platforms. In these platform, pages are generated on demand, each time a user tries to access them (caching may apply).</p>
<p>There are some pros/cons for using static website generator for blogging. These have already been discussed on many blog posts by bloggers that switched to Blogofile. If you are interested in reading more just google it.</p>
<p>I will provide several reasons that bought me in. Please excuse me if those are duplicates of things that others have already noticed.</p>
<ol>
<li>Currently this website is hosted as a personal home page my university provides for students. For security reasons, students can host only static content, so using static content is the only option I have.</li>
<li>When I will not be able to host my blog on my university's server, I will be able to move to any other server independently of available technology, eventually making the hosting cheaper.</li>
<li>Because there is no "code behind", I do not have worry about security. </li>
<li>Bologofile can be easily customized. It is easy to learn and setup and beginner friendly.</li>
</ol>
<p>Hopefully in the future I will costumize Blogofile and share some experience with the readers.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
